---
- name: installing basic dependancies
  apt:
    name:
      - make
      - build-essential
      - aptitude
      - apache2
      - python-mysqldb
      - cpanminus
    state: present

## There is a known bug with apparmor which messes with MariaDB
- name: installing mariadb
  apt:
    name:
    - mariadb-server
    - software-properties-common
  when: ansible_distribution == "Ubuntu"

- name: install extra repo for "Ubuntu"
  apt_repository:
    repo: ppa:ondrej/php
  when: ansible_distribution == "Ubuntu"

- name: installing mariadb
  apt:
    name: mysql-server
  when: ansible_distribution == "Debian"

- name: start Mariadb
  service:
    name: mariadb
    state: started
    enabled: yes

- name: create database database
  mysql_db:
    name: "{{ ocs_database_name }}"
    state: present

- name: Create database user and grant privileges
  mysql_user:
    name: "{{ ocs_database_user }}"
    password: "{{ ocs_database_pass }}"
    priv: "{{ ocs_database_name }}.*:ALL"
    state: present

- name: restart Mariadb
  service:
    name: mariadb
    state: restarted

- name: edit php.ini
  lineinfile:
    path: /etc/mysql/my.cnf
    regexp: '^max_allowed_packet'
    line: max_allowed_packet= 32M

- name: installing apache, dependancies and php and dependancies
  apt:
    name:
      - apache2
      - php{{ php_version }}
      - php{{ php_version }}-mysql
      - php{{ php_version }}-gd
      - php{{ php_version }}-soap
      - php{{ php_version }}-mbstring
      - php-gettext
      - php{{ php_version }}-curl
      - php{{ php_version }}-zip
      - php{{ php_version }}-xml
      - apache2-dev
    state: present

- name: installing perl modules
  apt:
    name:
      - libxml-simple-perl
      - libcompress-zlib-perl
      - libdbi-perl
      - libdbd-mysql-perl
      - libapache-dbi-perl
      - libnet-ip-perl
      - libsoap-lite-perl
      - libapache2-mod-perl2
      - libarchive-zip-perl
    state: present

- name: Create CPAN config directory
  file:
    path: /root/.cpan/CPAN
    state: directory
    recurse: no
    owner: root
    group: root
    mode: 0755

- name: Configure CPAN
  copy:
    src: MyConfig.pm
    dest: /root/.cpan/CPAN/MyConfig.pm
    owner: root
    group: root
    mode: 0644

- name: install YAML module from cpan
  cpanm:
    name: YAML

- name: installXML::Entities module from cpan
  cpanm:
    name: XML::Entities

- name: install Mojolicious::Lite module from cpan
  cpanm:
    name: Mojolicious::Lite

- name: install Plack::Handler module from cpan
  cpanm:
    name: Plack::Handler

- name: install Plack::Handler module from cpan
  cpanm:
    name: Apache2::SOAP

- name: install Plack::Handler module from cpan for ubuntu
  cpanm:
    name: Switch
  when: ansible_distribution == "Ubuntu"

- name: install Plack::Handler module from cpan for ubuntu
  cpanm:
    name: Parse::EDID
  when: ansible_distribution == "Ubuntu"

- name: install Plack::Handler module from cpan for ubuntu
  cpanm:
    name: Compress::Zlib
  when: ansible_distribution == "Ubuntu"

- name: restart apache
  service:
    name: apache2
    state: restarted

- name: Download and unpack ocs tarball
  unarchive:
    src: https://github.com/OCSInventory-NG/OCSInventory-ocsreports/releases/download/{{ ocs_version }}/OCSNG_UNIX_SERVER_{{ ocs_version }}.tar.gz
    dest: "{{ unzip_location }}"
    remote_src: yes

- name: Create answer file to location
  template:
    src: responsefile.j2
    dest: "{{ unzip_location }}/OCSNG_UNIX_SERVER_{{ ocs_version }}/responsefile.txt"

- name: ocsinventory conf file
  stat:
    path: "{{ apache_include_conf_directory }}/z-ocsinventory-server.conf"
  register: ocsconffile

- name: execute install script with answer file
  shell: ./setup.sh < responsefile.txt
  args:
    chdir: "{{ unzip_location }}/OCSNG_UNIX_SERVER_{{ ocs_version }}/"
  when: ocsconffile.stat.exists != True

- name: Copy ocs conf files
  copy:
    src: "{{ apache_include_conf_directory }}/z-ocsinventory-server.conf"
    dest: /etc/apache2
    remote_src: yes

- name: Copy ocs conf files
  copy:
    src: "{{ apache_include_conf_directory }}/ocsinventory-reports.conf"
    dest: /etc/apache2
    remote_src: yes

- name: Create Symlinks
  file:
    src: "{{ apache_include_conf_directory }}/z-ocsinventory-server.conf"
    dest: "{{ apache_include_conf_directory }}/ocsinventory.conf"
    state: link

- name: Create Symlinks
  file:
    src: "{{ apache_include_conf_directory }}/ocsinventory-reports.conf"
    dest: "{{ apache_include_conf_directory }}/ocsinventory.conf"
    state: link

- name: change mode of ocsinventory-reports folder
  file:
    path: "{{ static_admin_console_file_path }}"
    state: directory
    recurse: yes
    mode: '0766'

- name: change owner of  of {{ static_admin_console_file_path }} folder
  file:
    path: "{{ static_admin_console_file_path }}"
    state: directory
    recurse: yes
    owner: "{{ apache_account }}"
    group: "{{ apache_group }}"

- name: change owner {{ deployment_package_dir_path }} folder
  file:
    path: "{{ deployment_package_dir_path }}"
    state: directory
    recurse: yes
    owner: "{{ apache_account }}"
    group: "{{ apache_group }}"

- name: Activate configuration for apache2
  command:
    a2enconf z-ocsinventory-server

- name: Activate configuration for apache2
  command:
    a2enconf ocsinventory-reports

- name: Activate configuration for apache2
  command:
    a2enconf zz-ocsinventory-restapi

- name: restart Apache
  service:
    name: apache2
    state: restarted
